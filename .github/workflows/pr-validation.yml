name: PR Validation

on:
  pull_request:
    branches: 
      - release/next
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Download dependencies
        run: go mod download
        
      - name: Verify code formatting
        run: |
          gofmt -l . > gofmt-output.txt
          if [ -s gofmt-output.txt ]; then
            echo "The following files are not properly formatted:"
            cat gofmt-output.txt
            echo "Please run 'gofmt -w .' to fix formatting"
            exit 1
          fi
          
      - name: Run go vet
        run: go vet ./...
        
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m
          
      - name: Run tests
        run: go test -v ./... -race -coverprofile=coverage.out
        
      - name: Verify build
        run: go build -v .
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          
      - name: Security scan
        uses: securecodewarrior/github-action-add-sarif@v1
        if: always()
        with:
          sarif-file: 'gosec-report.sarif'
        continue-on-error: true